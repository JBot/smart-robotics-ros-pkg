<launch>

  <node pkg="rosserial_python" type="serial_node.py" name="arduino_serial_odometry" respawn="true" output="screen">
    <param name="baud" value="115200" />
    <param name="port" value="/dev/ttyUSB0" />
  </node>

  <node pkg="hokuyo_node" type="hokuyo_node" name="laser_publisher" output="screen">
    <param name="frame_id" value="base_laser" />
    <param name="port" value="/dev/ttyACM0" />
   <!-- <param name="min_ang" value="-1.92" />
    <param name="max_ang" value="1.95" /> -->
    <param name="min_ang" value="-1.72" />
    <param name="max_ang" value="1.75" />
  </node> 

  <node pkg="indomptable_nav" type="indomptable_transform_pose_hector" name="indomptable_pose_node" respawn="true" output="screen">
  </node>

  <node pkg="indomptable_nav" type="fougueux_transform_pose_hector" name="fougueux_pose_node" respawn="true" output="screen">
  </node>

  <!-- Publish a static transform between the robot base and the map frame -->
  <node pkg="tf" type="static_transform_publisher" name="map_base_broadcaster" args="0 0 0 0 0 0 /map /odom 100" />  
  <node pkg="tf" type="static_transform_publisher" name="map_base_broadcasterf" args="0 1.4 0 0 0 0 /map /base_link2 100" />

  <node pkg="eurobot_obstacles" type="pc_eurobot_obstacles" name="eurobot_obstacles" respawn="true" output="screen">
  </node>

  <node pkg="map_server" type="map_server" name="eurobot_map" args="$(find indomptable_nav)/mymap.yaml" respawn="true" output="screen">
  </node>
 
  <node pkg="indomptable_nav" type="pathwrapper" name="indomptable_pathwrapper" respawn="true" output="screen">
  </node>

</launch>
